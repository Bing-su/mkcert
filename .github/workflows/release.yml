on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to build and release"
        required: true
name: Upload Release Asset
jobs:
  release:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: "stable"
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Build binaries
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o "mkcert-${{ inputs.tag }}-linux-amd64" -ldflags "-X main.Version=${{ inputs.tag }}"
          CGO_ENABLED=0 GOOS=linux GOARCH=arm GOARM=6 go build -o "mkcert-${{ inputs.tag }}-linux-arm" -ldflags "-X main.Version=${{ inputs.tag }}"
          CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -o "mkcert-${{ inputs.tag }}-linux-arm64" -ldflags "-X main.Version=${{ inputs.tag }}"
          CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -o "mkcert-${{ inputs.tag }}-darwin-amd64" -ldflags "-X main.Version=${{ inputs.tag }}"
          CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -o "mkcert-${{ inputs.tag }}-darwin-arm64" -ldflags "-X main.Version=${{ inputs.tag }}"
          CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o "mkcert-${{ inputs.tag }}-windows-amd64.exe" -ldflags "-X main.Version=${{ inputs.tag }}"
          CGO_ENABLED=0 GOOS=windows GOARCH=arm64 go build -o "mkcert-${{ inputs.tag }}-windows-arm64.exe" -ldflags "-X main.Version=${{ inputs.tag }}"
      - name: Upload release artifacts
        uses: softprops/action-gh-release@v2
        with:
          files: |
            mkcert-*
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ inputs.tag }}
